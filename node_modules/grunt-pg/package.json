{
  "name": "grunt-pg",
  "description": "Grunt plugin to help with administering Postgres.",
  "version": "0.3.1",
  "homepage": "https://github.com/moneytribeaustralia/grunt-pg",
  "author": {
    "name": "Andrew Chilton",
    "email": "hello@moneytribe.com.au",
    "url": "http://moneytribe.com.au/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/moneytribeaustralia/grunt-pg.git"
  },
  "bugs": {
    "url": "https://github.com/moneytribeaustralia/grunt-pg/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/moneytribeaustralia/grunt-pg/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "pg": "0.11.x"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1rc5",
    "grunt-contrib-clean": "~0.4.0rc5",
    "grunt-contrib-nodeunit": "~0.1.2rc5",
    "grunt": "~0.4.0rc5"
  },
  "keywords": [
    "gruntplugin",
    "pg",
    "postgres",
    "postgresql"
  ],
  "readme": "# grunt-pg\n\n> Grunt plugin to help with administering Postgres.\n\n## Installation\n\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with\nthe following command:\n\n```bash\nnpm install --save-dev grunt-pg\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-pg');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed\nplugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures\nthat it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n[node-pg]: https://github.com/brianc/node-postgres/wiki/pg\n\n## Synopsis ##\n\nFirstly, an example of using the pgcreate task:\n\n```js\ngrunt.initConfig({\n  pgcreatedb: {\n    project1: {\n      // Target-specific file lists and/or options go here.\n      name: 'project1', // will be created\n      connection: {\n        user: 'postgres',\n        database: 'template1',\n      },\n    },\n  },\n})\n```\n\n## Tasks ##\n\nThere are 5 tasks in grunt-pg: *pgcreateuser*, *pgdropuser*, *pgcreatedb*, *pgowner*, *pgdropdb* and *pgsqlfile*. Each\ntask is a multitask.\n\nEach works similarly as the example above shows. The connection credentials must be a user who is privieleged enough to\nbe able to perform these operations. For example, using the 'postgres' user to the 'template1' database should be\nsufficient.\n\nThe connection object can also specify anything that [node-pg][] understands: user, database, password, port and host.\n\nEach task also requires the following:\n\n* pgcreateuser: user\n* pgdropuser: user\n* pgcreatedb: name\n* pgdropdb: name\n* pgowner: name, user\n\n## Release History\n\n```\n2013-01-16: 0.1.0 - \n```\n\n## Authors ##\n\n* Andrew Chilton (chilts).\n* Nicholas Faiz (nicholasf).\n\n## Licence ##\n\nCopyright (c) 2013 Moneytribe. MIT.\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-pg@0.3.1",
  "dist": {
    "shasum": "51b23b430935ec1590c4f838762bc595cd5bb304"
  },
  "_from": "grunt-pg@",
  "_resolved": "https://registry.npmjs.org/grunt-pg/-/grunt-pg-0.3.1.tgz"
}
